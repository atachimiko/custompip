ANCHORS:
 node_steps: &node_steps
   steps:
     - checkout
     - run: npm install
     - run: npm run lint
     - run: npm test
     # Check whether "run build" is successful
     - run: npm run build

version: 2
jobs:
  node_10:
    docker:
      - image: circleci/node:10
    <<: *node_steps

  node_8:
    docker:
      - image: circleci/node:8
    <<: *node_steps

  docker_test:
    machine: true
    steps:
      - checkout
      # Check whether "docker build" is successful or not
      - run: docker build -t piping-server .
      - run:
          name: Working test with Docker image
          command: |
            set -x
            # Run a server
            docker run -d -p 8080:80 piping-server --http-port=80
            # Wait for server running
            sleep 1
            # Create a file to send
            echo 'hello, world' > /tmp/hello.txt
            # Send and wait for a reciever
            curl -T /tmp/hello.txt localhost:8080/mypath &
            # Get data as a file
            curl localhost:8080/mypath > /tmp/download.txt
            # Print downloaded file
            cat  /tmp/download.txt
            # Test the equality
            diff /tmp/hello.txt /tmp/download.txt

  # (from: https://circleci.com/blog/publishing-npm-packages-using-circleci-2-0/)
  npm_publish:
    docker:
    - image: circleci/node:10
    steps:
      - checkout
      - run: npm install
      - run:
          name: Authenticate with registry
          command: echo -e "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: npm publish

workflows:
  version: 2
  node_tests:
    jobs:
      - node_10:
          filters:
            tags:
              only: /.*/
      - node_8:
          filters:
            tags:
              only: /.*/
      - docker_test
      - npm_publish:
          requires:
            - node_10
            - node_8
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
